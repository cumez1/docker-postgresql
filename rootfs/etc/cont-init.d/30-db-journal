#!/usr/bin/with-contenv bash
# shellcheck shell=bash disable=SC1008
set -e

# shellcheck source=../postgresql/functions
source /etc/postgresql/functions

# Configure journal
case "${PG_JOURNAL_WAL_LEVEL,,}" in
  replica|minimal|logical)
    set_postgresql_param "wal_level" "${PG_JOURNAL_WAL_LEVEL,,}"
  ;;

  *)
    log-init "unsupported value for wal_level: ${PG_JOURNAL_WAL_LEVEL,,}"
  ;;
esac

set_postgresql_param "fsync" "${PG_JOURNAL_WAL_FSYNC,,}"

case "${PG_JOURNAL_WAL_SYNC_METHOD}" in
  open_datasync|fdatasync|fsync|fsync_writethrough|open_sync)
    set_postgresql_param "wal_sync_method" "${PG_JOURNAL_WAL_SYNC_METHOD}"
  ;;

  *)
    log-init "unsupported value for wal_sync_method: ${PG_JOURNAL_WAL_SYNC_METHOD}"
  ;;
esac

case "${PG_JOURNAL_WAL_SYNCHRONOUS_COMMIT,,}" in
  on|off|true|false|0|1|local|remote_write|remote_apply)
    set_postgresql_param "synchronous_commit"
  ;;

  *)
    log-init "unsupported value for synchronous_commit: ${PG_JOURNAL_WAL_SYNCHRONOUS_COMMIT,,}"
  ;;
esac

set_postgresql_param "full_page_writes" "${PG_JOURNAL_WAL_FULL_PAGE_WRITES}"
set_postgresql_param "wal_keep_segments" "${PG_JOURNAL_WAL_KEEP_SEGMENTS}"
set_postgresql_param "max_wal_senders" "${PG_JOURNAL_MAX_SENDERS}"
set_postgresql_param "checkpoint_segments" "${PG_JOURNAL_CHECKPOINT_SEGMENTS}"

if is_enabled "${PG_JOURNAL_WAL_COMPRESSION}"; then
  set_postgresql_param "wal_compression" on
else
  set_postgresql_param "wal_compression" off
fi

if is_enabled "${PG_JOURNAL_WAL_LOG_HINTS}"; then
  set_postgresql_param "wal_log_hints" on
else
  set_postgresql_param "wal_log_hints" off
fi

if [ "${PG_JOURNAL_WAL_BUFFERS,,}" == "auto" ]; then
  set_postgresql_param "wal_buffers" -1
else
  # shellcheck disable=SC2086
  set_postgresql_param "wal_buffers" ${PG_JOURNAL_WAL_BUFFERS}
fi

# EOF